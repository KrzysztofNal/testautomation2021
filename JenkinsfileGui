pipeline {
    agent any

    triggers {
            cron('1 0 * * *')
        }

    parameters {
        choice(name: 'ENVIRONMENT', choices: ['dev', 'local', 'test', 'sit', 'preprod', 'prod'], description: 'Choose environment.')
        choice(name: 'TAG', choices: ['', 'GuiTest', 'login', 'action', 'simpleaction', 'windows'], description: 'Choose gui tests by Tag.')
        choice(name: 'EXTAG', choices: ['', 'GuiTest', 'login', 'action', 'simpleaction', 'windows'], description: 'Choose gui tests by Tag.')
        choice(name: 'CUCUMBER_TAG', choices: ['', '@BDD', '@login', '@userpanel', '@wordpress', '@test', '@website', '@website_2', '@website_3'], description: 'Choose bdd gui tests by Tag.')
        choice(name: 'BROWSER', choices: ['chrome', 'firefox'], description: 'Choose browser.')
        choice(name: 'MACHINE', choices: ['remote'], description: 'Choose machine.')
        string(name: 'REMOTE_URL', defaultValue: 'http://172.30.128.1:4444/wd/hub', description: 'Choose machine.')
    }

    stages {
        stage('checkout') {
            steps {
                git branch: 'paweld-qagui',
                url: 'https://github.com/testautomation112020/testautomation2021.git'
            }
        }

        stage('build') {
            steps {
                sh "mvn clean install -DskipTests"
            }
        }

        stage('run') {
            steps {
                sh "pwd"
                sh "ls -la"
                sh "mvn clean test -pl qa-gui -DENVIRONMENT=${ENVIRONMENT} -Dgroups=${params.TAG} -DexcludedGroups=${params.EXTAG} -Dcucumber.filter.tags=\"${params.CUCUMBER_TAG}\" -DBROWSER=${params.BROWSER} -DMACHINE=${params.MACHINE} -DREMOTE_URL=${params.REMOTE_URL}"
            }
        }

        stage('list') {
            steps {
                sh "ls -la ../"
                sh "ls -la ./"
                sh "ls -la ./qa-api"
                sh "ls -la ./qa-api/target"
            }
        }
    }

    post {
        always {
            allure([
                includeProperties: false,
                         jdk: '',
                         properties: [[key: 'allure.issues.tracker.pattern', value: 'http://tracker.company.com/%s'],
                         [key: 'allure.tests.management.pattern', value: 'http://tms.company.com/%s'],
                         ],
                         reportBuildPolicy: 'ALWAYS',
                         results: [[path: 'qa-gui/target/allure-results']]
                ])
            cucumber buildStatus: 'UNSTABLE', failedFeaturesNumber: -1, failedScenariosNumber: -1, failedStepsNumber: -1, fileIncludePattern: '**/*cucumber.json', jsonReportDirectory: 'qa-gui/target/', pendingStepsNumber: -1, skippedStepsNumber: -1, sortingMethod: 'ALPHABETICAL', undefinedStepsNumber: -1
        }
    }
}
