pipeline {
    agent any

    triggers {
            cron('1 0 * * *')
        }

    parameters {
        choice(name: 'ENVIRONMENT', choices: ['dev', 'local', 'test', 'sit', 'preprod', 'prod'], description: 'Choose environment.')
        choice(name: 'TAG', choices: ['Api', 'AzureTest', 'sanity', 'Activities'], description: 'Choose tests by Tag.')
    }

    stages {
        stage('checkout') {
            steps {
                git branch: 'paweld-qagui',
                url: 'https://gitlab.cindy.t-mobile.pl/WLaskowski1/prepaid-qa.git'
            }
        }

        stage('run') {
        input {
                        message "Choose the environment"
                        parameters {
                            choice(name: 'ENVIRONMENT_2', choices: ['dev', 'local', 'test', 'sit', 'preprod', 'prod'], description: 'Choose environment.')
                            choice(name: 'TAG', choices: ['Api', 'AzureTest', 'sanity', 'Activities'], description: 'Choose tests by Tag.')
                        }
                    }
            steps {
                sh "pwd"
                sh "ls -la"
                sh "mvn clean test -pl qa-api -DENVIRONMENT=${ENVIRONMENT_2} -Dgroups=${params.TAG}"
            }
        }

        stage('list') {
            steps {
                sh "ls -la ../"
                sh "ls -la ./"
                sh "ls -la ./qa-api"
                sh "ls -la ./qa-api/target"
            }
        }
    }

    post {
        always {
            allure([
                includeProperties: false,
                         jdk: '',
                         properties: [[key: 'allure.issues.tracker.pattern', value: 'http://tracker.company.com/%s'],
                         [key: 'allure.tests.management.pattern', value: 'http://tms.company.com/%s'],
                         ],
                         reportBuildPolicy: 'ALWAYS',
                         results: [[path: 'qa-api/target/allure-results']]
                ])
        }
    }
}
